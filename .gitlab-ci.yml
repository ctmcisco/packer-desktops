stages:
  - build
  - deploy
  - powercli
  - recompose

before_script:
  - git config --global http.sslVerify false

get_packer:
  stage: build
  tags: 
  - windows
  artifacts:
    paths:
    - packer.exe
  script:
    - echo $packerVersion
    - $packerFile = "packer_" + $packerVersion + "_windows_amd64.zip"
    - echo $packerFile
    - echo $env:packer_vmName
    - Write-Host "Fetching packer" -ForegroundColor Cyan
    - Invoke-WebRequest  -Uri ("https://releases.hashicorp.com/packer/" + $packerVersion + "/" + $packerFile) -OutFile $packerFile
    - Expand-Archive $packerFile -DestinationPath .

deploy_windows-10:
  stage: deploy
  tags:
  - windows
  script:
    - Write-Host "Deploying Windows 10" -ForegroundColor Cyan
    - cd windows-10
    - ../packer.exe build -force -var-file variables.json windows-10-pilot.json

install_vmware_powercli:
  stage: powercli
  tags:
  - windows
  script:
    - Write-Host "Installing NuGet" -ForegroundColor Cyan
    - Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
    - Write-Host "Set the repo installation policy" -ForegroundColor Cyan
    - Set-PSRepository PSGallery -InstallationPolicy Trusted
    - Write-Host "Installing PowerCLI" -ForegroundColor Cyan
    - Install-Module -Name VMware.PowerCLI -Scope CurrentUser -Confirm:$false
    - sleep 60
    - Set-PowerCLIConfiguration -Scope User -ParticipateInCEIP $false -InvalidCertificateAction Ignore -Confirm:$false
    - Write-Host "Importing the helper module" -ForegroundColor Cyan
    - Import-Module VMware.VimAutomation.HorizonView

recompose_pilot_pool:
  stage: recompose
  tags:
  - windows
  script:
    - Write-Host "Connecting to Horizon" -ForegroundColor Cyan
    - $hvServer = Connect-HVServer -Server $cs -User $csUser -Password $csPass -Domain $csDomain
    - $hvServices = $hvserver.ExtensionData
    - $hvServices